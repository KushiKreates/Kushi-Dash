import{r as s,j as o}from"./app-CKfLfX7q.js";import{c as i}from"./utils-BM_CldAA.js";import{b as G,c as H,d as m,e as W,O as Y,W as q,C as B,f as J,T as K,D as Q,a as v,R as U,P as X}from"./index-CgvnWWHh.js";import{c as x,u as A,S as Z,b as D}from"./button-CnTWfQKJ.js";const ee=s.forwardRef(({className:e,...a},t)=>o.jsx("textarea",{className:i("flex min-h-[60px] w-full rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50",e),ref:t,...a}));ee.displayName="Textarea";var ae="Label",N=s.forwardRef((e,a)=>o.jsx(G.label,{...e,ref:a,onMouseDown:t=>{var l;t.target.closest("button, input, select, textarea")||((l=e.onMouseDown)==null||l.call(e,t),!t.defaultPrevented&&t.detail>1&&t.preventDefault())}}));N.displayName=ae;var y=N;const te=x("text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"),oe=s.forwardRef(({className:e,...a},t)=>o.jsx(y,{ref:t,className:i(te(),e),...a}));oe.displayName=y.displayName;const re=x("relative w-full rounded-lg border px-4 py-3 text-sm [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground [&>svg~*]:pl-7",{variants:{variant:{default:"bg-background text-foreground",destructive:"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive"}},defaultVariants:{variant:"default"}}),se=s.forwardRef(({className:e,variant:a,...t},r)=>o.jsx("div",{ref:r,role:"alert",className:i(re({variant:a}),e),...t}));se.displayName="Alert";const le=s.forwardRef(({className:e,...a},t)=>o.jsx("h5",{ref:t,className:i("mb-1 font-medium leading-none tracking-tight",e),...a}));le.displayName="AlertTitle";const ie=s.forwardRef(({className:e,...a},t)=>o.jsx("div",{ref:t,className:i("text-sm [&_p]:leading-relaxed",e),...a}));ie.displayName="AlertDescription";var b="AlertDialog",[ne,Pe]=H(b,[m]),n=m(),R=e=>{const{__scopeAlertDialog:a,...t}=e,r=n(a);return o.jsx(U,{...r,...t,modal:!0})};R.displayName=b;var de="AlertDialogTrigger",ce=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=n(t);return o.jsx(W,{...l,...r,ref:a})});ce.displayName=de;var pe="AlertDialogPortal",w=e=>{const{__scopeAlertDialog:a,...t}=e,r=n(a);return o.jsx(X,{...r,...t})};w.displayName=pe;var ge="AlertDialogOverlay",j=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=n(t);return o.jsx(Y,{...l,...r,ref:a})});j.displayName=ge;var d="AlertDialogContent",[fe,ue]=ne(d),h=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,children:r,...l}=e,g=n(t),p=s.useRef(null),z=A(a,p),f=s.useRef(null);return o.jsx(q,{contentName:d,titleName:_,docsSlug:"alert-dialog",children:o.jsx(fe,{scope:t,cancelRef:f,children:o.jsxs(B,{role:"alertdialog",...g,...l,ref:z,onOpenAutoFocus:J(l.onOpenAutoFocus,c=>{var u;c.preventDefault(),(u=f.current)==null||u.focus({preventScroll:!0})}),onPointerDownOutside:c=>c.preventDefault(),onInteractOutside:c=>c.preventDefault(),children:[o.jsx(Z,{children:r}),o.jsx(ve,{contentRef:p})]})})})});h.displayName=d;var _="AlertDialogTitle",E=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=n(t);return o.jsx(K,{...l,...r,ref:a})});E.displayName=_;var T="AlertDialogDescription",C=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=n(t);return o.jsx(Q,{...l,...r,ref:a})});C.displayName=T;var me="AlertDialogAction",P=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=n(t);return o.jsx(v,{...l,...r,ref:a})});P.displayName=me;var S="AlertDialogCancel",O=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,{cancelRef:l}=ue(S,t),g=n(t),p=A(a,l);return o.jsx(v,{...g,...r,ref:p})});O.displayName=S;var ve=({contentRef:e})=>{const a=`\`${d}\` requires a description for the component to be accessible for screen reader users.

You can add a description to the \`${d}\` by passing a \`${T}\` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${d}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;return s.useEffect(()=>{var r;document.getElementById((r=e.current)==null?void 0:r.getAttribute("aria-describedby"))||console.warn(a)},[a,e]),null},xe=R,Ae=w,$=j,M=h,I=P,L=O,k=E,F=C;const Se=xe,De=Ae,V=s.forwardRef(({className:e,...a},t)=>o.jsx($,{className:i("fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",e),...a,ref:t}));V.displayName=$.displayName;const Ne=s.forwardRef(({className:e,...a},t)=>o.jsxs(De,{children:[o.jsx(V,{}),o.jsx(M,{ref:t,className:i("fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",e),...a})]}));Ne.displayName=M.displayName;const ye=({className:e,...a})=>o.jsx("div",{className:i("flex flex-col space-y-2 text-center sm:text-left",e),...a});ye.displayName="AlertDialogHeader";const be=({className:e,...a})=>o.jsx("div",{className:i("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",e),...a});be.displayName="AlertDialogFooter";const Re=s.forwardRef(({className:e,...a},t)=>o.jsx(k,{ref:t,className:i("text-lg font-semibold",e),...a}));Re.displayName=k.displayName;const we=s.forwardRef(({className:e,...a},t)=>o.jsx(F,{ref:t,className:i("text-sm text-muted-foreground",e),...a}));we.displayName=F.displayName;const je=s.forwardRef(({className:e,...a},t)=>o.jsx(I,{ref:t,className:i(D(),e),...a}));je.displayName=I.displayName;const he=s.forwardRef(({className:e,...a},t)=>o.jsx(L,{ref:t,className:i(D({variant:"outline"}),"mt-2 sm:mt-0",e),...a}));he.displayName=L.displayName;export{se as A,oe as L,ee as T,ie as a,Se as b,Ne as c,ye as d,Re as e,we as f,be as g,je as h};
